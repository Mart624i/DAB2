// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dab2_EfCore.Data;

#nullable disable

namespace dab2_EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220407134152_NewSchema")]
    partial class NewSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dab2_EfCore.Models.Chairman", b =>
                {
                    b.Property<int>("Member_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Member_id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cpr_number")
                        .HasColumnType("int");

                    b.Property<int>("Cvr_number")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Member_id");

                    b.HasIndex("Cvr_number")
                        .IsUnique();

                    b.ToTable("Chairmen");

                    b.HasData(
                        new
                        {
                            Member_id = 1,
                            Address = "Chairmanvejnummeret",
                            Cpr_number = 1111,
                            Cvr_number = 1,
                            Name = "Martin"
                        },
                        new
                        {
                            Member_id = 2,
                            Address = "Chairmanvejnummerto",
                            Cpr_number = 2222,
                            Cvr_number = 2,
                            Name = "Jens"
                        });
                });

            modelBuilder.Entity("dab2_EfCore.Models.Location", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Bathroom")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosingTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MunicipalityZipcode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpeningTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Address");

                    b.HasIndex("MunicipalityZipcode");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Address = "Denførstevej",
                            Bathroom = 1,
                            Zipcode = 8000
                        },
                        new
                        {
                            Address = "Denandenvej",
                            Bathroom = 2,
                            Zipcode = 7700
                        });
                });

            modelBuilder.Entity("dab2_EfCore.Models.Member", b =>
                {
                    b.Property<int>("Member_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Member_id"), 1L, 1);

                    b.Property<int>("Cvr_number")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SocietyCvr_number")
                        .HasColumnType("int");

                    b.HasKey("Member_id");

                    b.HasIndex("SocietyCvr_number");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Member_id = 1,
                            Cvr_number = 1,
                            Name = "Jesper"
                        },
                        new
                        {
                            Member_id = 2,
                            Cvr_number = 2,
                            Name = "Carsten"
                        });
                });

            modelBuilder.Entity("dab2_EfCore.Models.Municipality", b =>
                {
                    b.Property<int>("Zipcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Zipcode"), 1L, 1);

                    b.Property<int>("AccessKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Zipcode");

                    b.ToTable("Municipalities");

                    b.HasData(
                        new
                        {
                            Zipcode = 8000,
                            AccessKey = 1111,
                            Name = "Aarhus"
                        },
                        new
                        {
                            Zipcode = 7700,
                            AccessKey = 2222,
                            Name = "Thisted"
                        });
                });

            modelBuilder.Entity("dab2_EfCore.Models.Room", b =>
                {
                    b.Property<int?>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("RoomNumber"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("LocationAddress")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoomNumber");

                    b.HasIndex("LocationAddress");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomNumber = 1,
                            Address = "Denførstevej",
                            Capacity = 100
                        },
                        new
                        {
                            RoomNumber = 2,
                            Address = "Denandenvej",
                            Capacity = 200
                        });
                });

            modelBuilder.Entity("dab2_EfCore.Models.Society", b =>
                {
                    b.Property<int>("Cvr_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cvr_number"), 1L, 1);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipalityZipcode")
                        .HasColumnType("int");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Cvr_number");

                    b.HasIndex("MunicipalityZipcode");

                    b.ToTable("Societies");

                    b.HasData(
                        new
                        {
                            Cvr_number = 1,
                            Activity = "Fodbold",
                            Zipcode = 8000
                        },
                        new
                        {
                            Cvr_number = 2,
                            Activity = "Håndbold",
                            Zipcode = 7700
                        });
                });

            modelBuilder.Entity("dab2_EfCore.Models.Chairman", b =>
                {
                    b.HasOne("dab2_EfCore.Models.Society", "Society")
                        .WithOne("Chairman")
                        .HasForeignKey("dab2_EfCore.Models.Chairman", "Cvr_number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Society");
                });

            modelBuilder.Entity("dab2_EfCore.Models.Location", b =>
                {
                    b.HasOne("dab2_EfCore.Models.Municipality", "Municipality")
                        .WithMany("Locations")
                        .HasForeignKey("MunicipalityZipcode");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("dab2_EfCore.Models.Member", b =>
                {
                    b.HasOne("dab2_EfCore.Models.Society", "Society")
                        .WithMany("Members")
                        .HasForeignKey("SocietyCvr_number");

                    b.Navigation("Society");
                });

            modelBuilder.Entity("dab2_EfCore.Models.Room", b =>
                {
                    b.HasOne("dab2_EfCore.Models.Location", "Location")
                        .WithMany("Rooms")
                        .HasForeignKey("LocationAddress");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("dab2_EfCore.Models.Society", b =>
                {
                    b.HasOne("dab2_EfCore.Models.Municipality", "Municipality")
                        .WithMany("ListOfSocieties")
                        .HasForeignKey("MunicipalityZipcode");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("dab2_EfCore.Models.Location", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("dab2_EfCore.Models.Municipality", b =>
                {
                    b.Navigation("ListOfSocieties");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("dab2_EfCore.Models.Society", b =>
                {
                    b.Navigation("Chairman");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
